<Window x:Class="FSAutomator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter="clr-namespace:FSAutomator"
        xmlns:local1="clr-namespace:FSAutomator.ViewModel"
        mc:Ignorable="d"
        Title="FSAutomator v1.0" Height="700" Width="1200" ResizeMode="CanResize"
        MinHeight="700" MinWidth="1200">
    <Window.Resources>
        <converter:BoolToOppositeBoolConverter x:Key="oppositeConverter" />
        <converter:ValidationStatusConverter x:Key="validationStatusConverter" />
        <SolidColorBrush x:Key="alternateRowColor" Color="#FFCCEFFB"/>
        <SolidColorBrush x:Key="parentRowColor" Color="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"/>
    </Window.Resources>
    <Window.DataContext>
        <local1:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="63"/>
            <RowDefinition Height="363*"/>
            <RowDefinition Height="212*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="263"/>
        </Grid.ColumnDefinitions>
        <Button Command="{Binding ButtonAdd}" IsEnabled="true" HorizontalAlignment="Left" Margin="12,18,0,0" VerticalAlignment="Top"  Height="18" Width="18" Grid.Row="1" >
            <Image Source="icons\add.ico"  />
        </Button>
        <Button Command="{Binding ButtonRemove}" IsEnabled="true" HorizontalAlignment="Left" Margin="12,41,0,0" VerticalAlignment="Top"  Height="18" Width="18" Grid.Row="1" >
            <Image Source="icons\remove.ico"  />
        </Button>
        <Button Command="{Binding ButtonUp}" IsEnabled="true" HorizontalAlignment="Left" Margin="12,64,0,0" VerticalAlignment="Top"  Height="18" Width="18" Grid.Row="1" >
            <Image Source="icons\up.ico"/>
        </Button>
        <Button Command="{Binding ButtonDown}" IsEnabled="true" HorizontalAlignment="Left" Margin="12,87,0,0" VerticalAlignment="Top"  Height="18" Width="18" Grid.Row="1"  >
            <Image Source="icons\down.ico" />
        </Button>
        <DataGrid  x:Name="dataGridActions" SelectionMode="Single" SelectionUnit="FullRow"  ItemsSource="{Binding ActionListUI}" SelectedIndex="{Binding SelectedIndexActionListUI}" SelectedValue ="{Binding SelectedActionListUI, Mode=TwoWay}" Margin="49,10,12,10" RowHeaderWidth="0"  AutoGenerateColumns="False" CanUserResizeRows="False" CanUserAddRows="False" CanUserSortColumns="False" IsReadOnly="{Binding ElementName=chkEditMode, Path=IsChecked, Converter={StaticResource oppositeConverter}}" Grid.Row="1" Background="{x:Null}" GridLinesVisibility="None" AlternatingRowBackground="{StaticResource alternateRowColor}" AlternationCount="2" Grid.ColumnSpan="2">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <!-- <Setter Property="Foreground" Value="Black" /> -->
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <!-- <Setter Property="Background" Value="#FFCEC9C9"/> -->
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsValidated}" Value="False">
                            <Setter Property="Foreground" Value="Red"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Width="Auto" Binding="{Binding Id,UpdateSourceTrigger=PropertyChanged}" SortDirection="Ascending" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding IsValidated, Converter={StaticResource validationStatusConverter}}" Height="15" Width="15" ToolTip="{Binding ValidationOutcome}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Name" Width="Auto" Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="false"/>
                <DataGridTextColumn Header="Status" Width="Auto" Binding="{Binding Status,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="false"/>
                <!-- <DataGridTextColumn Header="Parameters" Width="*" Binding="{Binding Parameters,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="false"/> -->
                <DataGridTextColumn Header="Result" Width="*" Binding="{Binding Result.VisibleResult,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="true" />
                <DataGridCheckBoxColumn Header="PE" Width="40" Binding="{Binding ParallelLaunch, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="{Binding ElementName=chkEditMode, Path=IsChecked, Converter={StaticResource oppositeConverter}}" />
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Border BorderThickness="0" Padding="10">
                        <StackPanel Margin="55,10" >
                            <TextBox Text="Parameters:" Background="{DynamicResource parentRowColor}" BorderThickness="0" Foreground="Black"  IsReadOnly="True"/>
                            <TextBox Margin="10,10" Background="{DynamicResource parentRowColor}" BorderThickness="0" Foreground="Black" AcceptsReturn="True" DataContext="{Binding SelectedItem, ElementName=dataGridActions, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Text="{Binding ParametersBeautified, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding ElementName=chkEditMode, Path=IsChecked, Converter={StaticResource oppositeConverter}}"/>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        <DockPanel Margin="0,0,0,43" Grid.ColumnSpan="3">
            <Menu DockPanel.Dock="Top" Height="22" Background="{x:Null}" VerticalAlignment="Top">
                <MenuItem Header="_File">
                    <Separator />
                    <MenuItem Header="_Exit" Click="MnuExit_Click"/>
                </MenuItem>
                <MenuItem Header="Automation">
                    <MenuItem Header="Execute" Command="{Binding ButtonExecute}"/>
                    <Separator />
                    <MenuItem Header="Import" Command="{Binding ButtonImportAutomation}"/>
                    <MenuItem Header="Load" Command="{Binding ButtonLoadActions}"/>
                </MenuItem>
                <MenuItem Header="Advanced">
                    <MenuItem Header="Edit Mode" IsCheckable="true" IsChecked="{Binding EditMode, Mode=TwoWay}"/>
                    <Separator />
                    <MenuItem Header="Validate Automation" Command="{Binding ButtonValidate}"/>
                </MenuItem>
            </Menu>
        </DockPanel>
        <DataGrid  Margin="49,10,12,15" AutoGenerateColumns="False" ItemsSource="{Binding ValidationOutcomeCleaned, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Background="{x:Null}" GridLinesVisibility="None" AlternatingRowBackground="{StaticResource alternateRowColor}" AlternationCount="2" Grid.ColumnSpan="2" >
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="#FFCEC9C9" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Validation Issues" Width="*" Binding="{Binding}" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
        <ToolBar x:Name="MyToolbar" Margin="0,24,0,0" Grid.ColumnSpan="3" Background="{x:Null}" VerticalAlignment="Top" Height="28" >
            <Button x:Name="btnConnect" Command="{Binding ButtonConnect}" Height="23" Width="23" >
                <Image Source="icons\connect.ico" />
            </Button>
            <Button x:Name="btnImportAutomation" Command="{Binding ButtonImportAutomation}"  Height="23" Width="23" >
                <Image Source="icons\import.ico" />
            </Button>
            <Separator />
            <Button x:Name="btnExport"  Command="{Binding ButtonExport}"  Height="23" Width="23" >
                <Image Source="icons\export.ico" />
            </Button>
            <Button x:Name="btnSaveAs"  Command="{Binding ButtonSaveAs}"  Height="23" Width="23" >
                <Image Source="icons\save.ico" />
            </Button>
            <ComboBox HorizontalAlignment="Left" ItemsSource="{Binding AutomationFilesList}" DisplayMemberPath="VisibleName" SelectedItem="{Binding SelectedItemAutomationFilesList}" Width="249" Height="23" BorderBrush="#FFCECECE" OpacityMask="Black" />
            <Button x:Name="btnLoadActions"  Command="{Binding ButtonLoadActions}"  Height="23" Width="23" >
                <Image Source="icons\load.ico" />
            </Button>
            <Button x:Name="btnExecuteActions" Command="{Binding ButtonExecute}"   Height="23" Width="23" >
                <Image Source="icons\play.ico" />
            </Button>
            <Separator />
            <Button x:Name="btnValidate" Command="{Binding ButtonValidate}"  Height="23" Width="23" >
                <Image Source="icons\validate.ico" />
            </Button>
            <Separator />
            <CheckBox x:Name="chkEditMode"  IsChecked="{Binding EditMode, Mode=TwoWay}" Height="23" Width="23" >
                <Image Source="icons\edit.ico" />
            </CheckBox>
        </ToolBar>
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="272"/>
                <RowDefinition Height="272"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
        </Grid>
        <GroupBox Header="Action details" VerticalAlignment="Top" Margin="5,100,10,0" Width="248" Grid.Row="1" Grid.Column="2" BorderBrush="#FFA1A6A9" Height="285" Grid.RowSpan="2">
            <WrapPanel Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Height="261">
                <Label Content="Action name" HorizontalAlignment="Center" VerticalAlignment="Top" Height="28" Width="139"/>
                <TextBox HorizontalAlignment="Center" Height="23" TextWrapping="Wrap" DataContext="{Binding SelectedItem, ElementName=dataGridActions, Mode=TwoWay}" Text="{Binding Name, Mode=TwoWay}" VerticalAlignment="Top" Width="232" Background="White" IsReadOnly="{Binding IsChecked, Converter={StaticResource oppositeConverter}, ElementName=chkEditMode}"/>
                <Label Content="Parameters" HorizontalAlignment="Center" VerticalAlignment="Top" Height="28" Width="139"/>
                <TextBox HorizontalAlignment="Center" Height="124" TextWrapping="Wrap" AcceptsReturn="True" DataContext="{Binding SelectedItem, ElementName=dataGridActions, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Text="{Binding ParametersBeautified, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="232" Background="White" IsReadOnly="{Binding IsChecked, Converter={StaticResource oppositeConverter}, ElementName=chkEditMode}"/>
                <Label Content="Result" HorizontalAlignment="Center" VerticalAlignment="Top" Height="28" Width="139"/>
                <TextBox HorizontalAlignment="Center" Height="23" TextWrapping="Wrap" DataContext="{Binding SelectedItem, ElementName=dataGridActions, Mode=TwoWay}" Text="{Binding Result.VisibleResult, Mode=OneWay}" VerticalAlignment="Top" Width="232" Background="White" IsReadOnly="True" />
            </WrapPanel>
        </GroupBox>
        <WrapPanel  Orientation="Vertical" Margin="9,7,73,340" Grid.Column="2" Grid.Row="1">
            <StackPanel Orientation="Horizontal">
                <Label Content="Connection to Sim status:" HorizontalAlignment="Left" VerticalAlignment="Center" Height="28" Width="150" />
                <Ellipse Height="20" Stroke="Black" Width="20">
                    <Ellipse.Style>
                        <Style TargetType="Ellipse">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ConnectionStatus}" Value="True">
                                    <Setter Property="Fill"
                                    Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ConnectionStatus}" Value="False">
                                    <Setter Property="Fill"
                                    Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Style>
                </Ellipse>
            </StackPanel>
        </WrapPanel>
        <GroupBox Header="Automation name" VerticalAlignment="Top" Height ="55" Width="248" Grid.Row="1" Margin="5,40,10,0" Grid.Column="2" BorderBrush="#FFA1A6A9">
            <WrapPanel   Margin="2,0,-2,0" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Height="28">
                <TextBox HorizontalAlignment="Center" Height="23" TextWrapping="Wrap" Text="{Binding SelectedAutomationName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Width="230" Background="White" IsReadOnly="False"/>
            </WrapPanel>
        </GroupBox>
    </Grid>
</Window>
